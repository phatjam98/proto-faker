name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:
  validate:
    name: validate (fast-fail)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Run checkstyle validation
        run: ./gradlew checkstyleMain checkstyleTest

      - name: Run tests and coverage validation
        run: ./gradlew test jacocoTestReport jacocoTestCoverageVerification

      - name: Upload validation test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: protofaker-validation-test-results
          path: build/test-results/

      - name: Upload validation coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: protofaker-validation-jacoco-coverage-reports
          path: build/reports/jacoco/

  build:
    name: build (java ${{ matrix.java-version }})
    runs-on: ubuntu-latest
    needs: validate
    strategy:
      matrix:
        java-version: [11, 17, 21]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build and test
        run: ./gradlew clean build

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: protofaker-test-results-java-${{ matrix.java-version }}
          path: build/test-results/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.java-version == 11  # Only upload once
        with:
          name: protofaker-build-artifacts
          path: build/libs/