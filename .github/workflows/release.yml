name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Extract version from tag
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Releasing version $VERSION from tag $TAG"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build and test
        run: ./gradlew clean build

      - name: Run quality checks
        run: |
          ./gradlew checkstyleMain checkstyleTest
          ./gradlew jacocoTestReport jacocoTestCoverageVerification

      - name: Stage artifacts to Maven Central Portal
        run: ./gradlew publishMavenJavaPublicationToStagingRepository
        env:
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      - name: Create GitHub Release with JReleaser
        run: ./gradlew jreleaserFullRelease
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Upload release artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: protofaker-release-artifacts-${{ steps.version.outputs.version }}
          path: |
            build/libs/
            build/distributions/
            build/reports/

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: protofaker-release-test-results-${{ steps.version.outputs.version }}
          path: |
            build/test-results/
            build/reports/tests/