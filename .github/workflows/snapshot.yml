name: Snapshot Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  validate:
    name: validate snapshot (fast-fail)
    runs-on: ubuntu-latest
    outputs:
      is_snapshot: ${{ steps.check-version.outputs.is_snapshot }}
      version: ${{ steps.check-version.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Check if version contains SNAPSHOT
        id: check-version
        run: |
          VERSION=$(./gradlew properties -q | grep "^version:" | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          if [[ "$VERSION" == *"SNAPSHOT"* ]]; then
            echo "is_snapshot=true" >> $GITHUB_OUTPUT
            echo "Version $VERSION is a SNAPSHOT - proceeding with validation"
          else
            echo "is_snapshot=false" >> $GITHUB_OUTPUT
            echo "Version $VERSION is not a SNAPSHOT - skipping snapshot release"
            exit 0
          fi

      - name: Run checkstyle validation
        run: ./gradlew checkstyleMain checkstyleTest

      - name: Run tests and coverage validation
        run: ./gradlew test jacocoTestReport jacocoTestCoverageVerification

      - name: Upload validation artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: protofaker-snapshot-validation-results
          path: |
            build/test-results/
            build/reports/

  release:
    name: snapshot release
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.is_snapshot == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Build project
        run: ./gradlew clean build

      - name: Stage artifacts to local staging repository
        run: ./gradlew publishMavenJavaPublicationToStagingRepository
        env:
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}

      - name: Release SNAPSHOT with JReleaser
        run: ./gradlew jreleaserFullRelease
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Upload snapshot artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: protofaker-snapshot-artifacts-${{ needs.validate.outputs.version }}
          path: build/libs/